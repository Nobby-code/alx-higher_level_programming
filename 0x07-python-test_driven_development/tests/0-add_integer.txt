# 0-add_integer.txt

===============================
 How to test 0-add_integer.py
===============================

Function importation from 0-add_integer module
----------------------------------------------

>>> add_integer = __import__('0-add_integer').add_integer

Integer numbers

::

    >>> add_integer(1, 2)
    3
    >>> add_integer(2)
    100
    >>> add_integer(100, -2)
    98
    
Floating-point values.

::

    >>> add_integer(100.0, -2)
    98

Non-Numbers
===========

::

    >>> add_integer(4, 'School') #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    TypeError: b must be an integer

Use of None as an argument
::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

Using boolean arguments

::
    >>> add_integer(True)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, True)
    Traceback (most recent call last):
    TypeError: b must be an integer

If value NaN and large values

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(4, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('inf'), float('inf')) #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
