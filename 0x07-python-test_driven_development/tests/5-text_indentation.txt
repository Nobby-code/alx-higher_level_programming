=================================
Test file for 5-text_indentation
=================================

Function importation from 5-text_indentation module
----------------------------------------------------

>>> text_indentation = __import__('5-text_indentation').text_indentation #doctest: +REPORT_NDIFF
    
Checking docstring moodule
::
    >>> __import__('5-text_indentation').__doc__ != None
    True

Checking docstring for method
::
    >>> len(text_indentation.__doc__) > 0
    True

Using a none string value
::
    >>> text_indentation(4) #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    TypeError: text must be a string

    >>> text_indentation(True)
    Traceback (most recent call last):
    TypeError: text must be a string

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

Using one line string
::
    >>> text_indentation("Hello")
    Hello

Short string
::
    >>> text_indentation("Nobby. Guda")
    Nobby.
    <BLANKLINE>
    Guda

Using string
::
    >>> text_indentation("Properties: Pen. Book")
    Properties:
    <BLANKLINE>
    Pen.
    <BLANKLINE>
    Book

No argument
::
    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'

More than one argument
::
    >>> text_indentation("nobby", "guda", "oluoch")
    Traceback (most recent call last):
    TypeError: text_indentation() takes 1 positional argument but 3 were given

Bolean type
::
    >>> text_indentation(True)
    Traceback (most recent call last):
    TypeError: text must be a string

Only using t = ": . ?"
::
    >>> t = ": . ?"
    >>> text_indentation(t)
    :
    <BLANKLINE>
    .
    <BLANKLINE>
    ?
    <BLANKLINE>
