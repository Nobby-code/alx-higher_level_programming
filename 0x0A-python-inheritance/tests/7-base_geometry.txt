================================
Test file for 7-base_geometry.py
=================================

Importing the module
---------------------
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Testing with integer value greater than 0
::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

Testing with integer value <= 0
::
    >>> bg.integer_validator("my_int", -1) #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", 0) #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

Using float
::
    >>> bg.integer_validator("nobby", 5.5)
    Traceback (most recent call last):
    TypeError: nobby must be an integer

Using string
::
    >>> bg.integer_validator("bobby", "nobby")
    Traceback (most recent call last):
    TypeError: bobby must be an integer

Using single parameter
::
    >>> bg.integer_validator("norbert")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Using more than requared parameters
::
    >>> bg.integer_validator("nobby", 5, 20)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

validator
::
    >>> 'integer_validator' in dir(BaseGeometry)
    True

Trying not implemented area
::
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Trying with no arguments
::
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
